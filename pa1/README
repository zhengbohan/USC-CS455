Name: Nicole Fronda
USC loginid: nfronda
CSCI 455 PA1
Fall 2016

----------------------------------------------
CERTIFY IT'S YOUR WORK

"I certify that the work submitted for this assignment does not
violate USC's student conduct code.  In particular, the work is my
own, not a collaboration, and does not involve code created by other
people, except for the the resources explicitly mentioned in the CS 455
Course Syllabus.  And I did not share my solution or parts of it with
other students in the course."

Initial below to "sign" the above statement:
NF

----------------------------------------------
ACKNOWLEDGE ANY OUTSIDE SOURCES

List here any code you submitted for this assignment that was written
with significant help of a course staff member, or code used from the
textbook.  Be specific about what methods or algorithms are involved,
and what sections of the textbook are involved (if applicable): [you do
not need to list any of the code that we wrote for the assignment,
i.e., the contents of the starter files for the assignment]



----------------------------------------------
KNOWN BUGS or LIMITATIONS:

Program will crash for very large numbers > 10^9

----------------------------------------------
ANY OTHER NOTES FOR THE GRADER:



----------------------------------------------
ANSWERS TO ASSIGNMENT README QUESTIONS (if applicable):

1) What is the probability of each of the three outcomes in a trial: two heads, one head and one tail, and two tails? Why is one of them different than the other two?

P(Two Heads) = 1/4
P(One Head, One Tail) = 1/2
P(Two Tails) = 1/4

The probability of getting one head and one tail is twice as likely than getting two heads or two tails.  This is because there are only four possibilities of a two trial coin toss:

TT
TH
HT
HH

Two of the above possibilities have one head and one tail.  Only one possibility has two heads and only one possibility has two tails.

2) Roughly how many trials do you need to do before you mostly get results within 1% of these probabilities? Do several simulations using your program to determine an answer to this. You just need a general order of magnitude, not an exact answer.

The number of trials required to consistently get within 1% of the above probabilities (~25% for HH, ~50% for HT, ~25% for TT) should have magnitude of at least 10^3.

3) Roughly how many trials can you do before it crashes with an overflow error? (you do not need an exact answer, just an order of magnitude) State the largest value you tried where it still worked correctly, and one where it overflowed. You can get an idea of what general values to try by looking at the limits on Java integers (see Section 4.1.1 of the text). Play around with your program to verify that it actually works for very large values that are within the limits. Warning: For very large values you may have to wait a fair amount of time before you get the results (probably slower on aludra than on you own machine).

10^9 is slow to work but still worked
10^10 ceases to work anymore




